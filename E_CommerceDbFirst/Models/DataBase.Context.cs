//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace E_CommerceDbFirst.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class data_Base : DbContext
    {
        public data_Base()
            : base("name=data_Base")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Cart> Carts { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Ingredient> Ingredients { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
    
        [DbFunction("data_Base", "CommaSeparated")]
        public virtual IQueryable<CommaSeparated_Result> CommaSeparated(string psCSString)
        {
            var psCSStringParameter = psCSString != null ?
                new ObjectParameter("psCSString", psCSString) :
                new ObjectParameter("psCSString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CommaSeparated_Result>("[data_Base].[CommaSeparated](@psCSString)", psCSStringParameter);
        }
    
        [DbFunction("data_Base", "fn_Split")]
        public virtual IQueryable<fn_Split_Result> fn_Split(string text, string delimiter)
        {
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Split_Result>("[data_Base].[fn_Split](@text, @delimiter)", textParameter, delimiterParameter);
        }
    
        public virtual int deleteCart(Nullable<int> cartId)
        {
            var cartIdParameter = cartId.HasValue ?
                new ObjectParameter("cartId", cartId) :
                new ObjectParameter("cartId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteCart", cartIdParameter);
        }
    
        public virtual int deleteItem(Nullable<int> itemId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteItem", itemIdParameter);
        }
    
        public virtual ObjectResult<getAuthenticatedCart_Result> getAuthenticatedCart(string customerName)
        {
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAuthenticatedCart_Result>("getAuthenticatedCart", customerNameParameter);
        }
    
        public virtual ObjectResult<getCartsList_Result> getCartsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCartsList_Result>("getCartsList");
        }
    
        public virtual ObjectResult<getCategories_Result> getCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCategories_Result>("getCategories");
        }
    
        public virtual ObjectResult<string> getIngredientsByCategoryId(Nullable<int> categoryId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getIngredientsByCategoryId", categoryIdParameter);
        }
    
        public virtual ObjectResult<getIngredientsList_Result> getIngredientsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getIngredientsList_Result>("getIngredientsList");
        }
    
        public virtual ObjectResult<getItemByCatName_Result> getItemByCatName(string categoriesName)
        {
            var categoriesNameParameter = categoriesName != null ?
                new ObjectParameter("CategoriesName", categoriesName) :
                new ObjectParameter("CategoriesName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getItemByCatName_Result>("getItemByCatName", categoriesNameParameter);
        }
    
        public virtual ObjectResult<getItemById_Result> getItemById(Nullable<int> itemId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getItemById_Result>("getItemById", itemIdParameter);
        }
    
        public virtual ObjectResult<getItems_Result> getItems()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getItems_Result>("getItems");
        }
    
        public virtual ObjectResult<getItemsByIngredientName_Result> getItemsByIngredientName(string ingredientName)
        {
            var ingredientNameParameter = ingredientName != null ?
                new ObjectParameter("IngredientName", ingredientName) :
                new ObjectParameter("IngredientName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getItemsByIngredientName_Result>("getItemsByIngredientName", ingredientNameParameter);
        }
    
        public virtual ObjectResult<getUserById_Result> getUserById(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserById_Result>("getUserById", userIdParameter);
        }
    
        public virtual int saveItem(string name, Nullable<decimal> price, string imageUrl, Nullable<int> categoriesId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("ImageUrl", imageUrl) :
                new ObjectParameter("ImageUrl", typeof(string));
    
            var categoriesIdParameter = categoriesId.HasValue ?
                new ObjectParameter("CategoriesId", categoriesId) :
                new ObjectParameter("CategoriesId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("saveItem", nameParameter, priceParameter, imageUrlParameter, categoriesIdParameter);
        }
    
        public virtual int saveNewCart(Nullable<int> itemsQuantity, Nullable<System.DateTime> dateCreated, Nullable<int> itemsId, string customerName)
        {
            var itemsQuantityParameter = itemsQuantity.HasValue ?
                new ObjectParameter("ItemsQuantity", itemsQuantity) :
                new ObjectParameter("ItemsQuantity", typeof(int));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var itemsIdParameter = itemsId.HasValue ?
                new ObjectParameter("ItemsId", itemsId) :
                new ObjectParameter("ItemsId", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("saveNewCart", itemsQuantityParameter, dateCreatedParameter, itemsIdParameter, customerNameParameter);
        }
    
        public virtual int updateCart(Nullable<int> cartId, Nullable<int> itemsQuantity)
        {
            var cartIdParameter = cartId.HasValue ?
                new ObjectParameter("CartId", cartId) :
                new ObjectParameter("CartId", typeof(int));
    
            var itemsQuantityParameter = itemsQuantity.HasValue ?
                new ObjectParameter("ItemsQuantity", itemsQuantity) :
                new ObjectParameter("ItemsQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateCart", cartIdParameter, itemsQuantityParameter);
        }
    
        public virtual ObjectResult<getUsersList_Result> getUsersList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUsersList_Result>("getUsersList");
        }
    
        public virtual int saveNewOrder(Nullable<System.DateTime> dateCreated, Nullable<int> itemId, Nullable<decimal> pricePerUnit, string orderedBy, Nullable<int> itemsQUantity)
        {
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var pricePerUnitParameter = pricePerUnit.HasValue ?
                new ObjectParameter("PricePerUnit", pricePerUnit) :
                new ObjectParameter("PricePerUnit", typeof(decimal));
    
            var orderedByParameter = orderedBy != null ?
                new ObjectParameter("OrderedBy", orderedBy) :
                new ObjectParameter("OrderedBy", typeof(string));
    
            var itemsQUantityParameter = itemsQUantity.HasValue ?
                new ObjectParameter("ItemsQUantity", itemsQUantity) :
                new ObjectParameter("ItemsQUantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("saveNewOrder", dateCreatedParameter, itemIdParameter, pricePerUnitParameter, orderedByParameter, itemsQUantityParameter);
        }
    
        public virtual ObjectResult<getOrderList_Result> getOrderList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getOrderList_Result>("getOrderList");
        }
    
        public virtual ObjectResult<getOrdersByDate_Result> getOrdersByDate(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getOrdersByDate_Result>("getOrdersByDate", dateParameter);
        }
    
        public virtual int SaveNewItemsIngredients(Nullable<int> itemId, Nullable<int> ingredientId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var ingredientIdParameter = ingredientId.HasValue ?
                new ObjectParameter("IngredientId", ingredientId) :
                new ObjectParameter("IngredientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveNewItemsIngredients", itemIdParameter, ingredientIdParameter);
        }
    }
}
